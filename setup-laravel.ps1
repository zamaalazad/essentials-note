# ===================================================================
#   Laravel Project Setup Script for Windows PowerShell
#
#   ржПржЗ рж╕рзНржХрзНрж░рж┐ржкрзНржЯржЯрж┐ ржПржХржЯрж┐ ржирждрзБржи рж▓рж╛рж░рж╛ржнрзЗрж▓ ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рждрзИрж░рж┐ ржУ
#   ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп ржбрж┐ржЬрж╛ржЗржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред
#
#   ржмрзНржпржмрж╣рж╛рж░ржмрж┐ржзрж┐:
#   1. ржПржЗ ржлрж╛ржЗрж▓ржЯрж┐ `Setup-Laravel.ps1` ржирж╛ржорзЗ рж╕рзЗржн ржХрж░рзБржиред
#   2. PowerShell ржЯрж╛рж░рзНржорж┐ржирж╛рж▓ ржЦрзБрж▓рзБржиред
#   3. ржкрзНрж░ржержоржмрж╛рж░ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп `Set-ExecutionPolicy RemoteSigned -Scope Process`
#      ржХржорж╛ржирзНржбржЯрж┐ ржЪрж╛рж▓рж┐рзЯрзЗ ржПржХрзНрж╕рж┐ржХрж┐ржЙрж╢ржи ржкрж▓рж┐рж╕рж┐ ржарж┐ржХ ржХрж░рзБржиред
#   4. ржпрзЗ ржлрзЛрж▓рзНржбрж╛рж░рзЗ ржирждрзБржи ржкрзНрж░ржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рждрзЗ ржЪрж╛ржи, рж╕рзЗржЦрж╛ржирзЗ ржпрж╛ржиред
#   5. `./Setup-Laravel.ps1` ржХржорж╛ржирзНржбржЯрж┐ ржЪрж╛рж▓рж┐рзЯрзЗ рж╕рзНржХрзНрж░рж┐ржкрзНржЯржЯрж┐ рж░рж╛ржи ржХрж░рзБржиред
# ===================================================================

# --- ржзрж╛ржк рзз: ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржХрж╛ржЫ ржерзЗржХрзЗ рждржерзНржп рж╕ржВржЧрзНрж░рж╣ ---
Write-Host "Laravel Project Setup Automation" -ForegroundColor Yellow
$projectName = Read-Host "ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржирж╛ржо ржжрж┐ржи (e.g., my-awesome-app)"
$dbName = Read-Host "ржбрж╛ржЯрж╛ржмрзЗржЬрзЗрж░ ржирж╛ржо ржжрж┐ржи (ржЦрж╛рж▓рж┐ рж░рж╛ржЦрж▓рзЗ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржирж╛ржо ржмрзНржпржмрж╣рзГржд рж╣ржмрзЗ)"

# ржпржжрж┐ ржбрж╛ржЯрж╛ржмрзЗржЬрзЗрж░ ржирж╛ржо ржЦрж╛рж▓рж┐ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржирж╛ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи
if (-not $dbName) {
    # ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржирж╛ржорзЗрж░ '-' ржХрзЗ '_' ржжрж┐рзЯрзЗ рж░рж┐ржкрзНрж▓рзЗрж╕ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ ржбрж╛ржЯрж╛ржмрзЗржЬрзЗрж░ ржЬржирзНржп
    $dbName = $projectName.Replace('-', '_')
    Write-Host "ржбрж╛ржЯрж╛ржмрзЗржЬрзЗрж░ ржирж╛ржо рж╣рж┐рж╕рзЗржмрзЗ '$dbName' ржмрзНржпржмрж╣рзГржд рж╣ржЪрзНржЫрзЗред" -ForegroundColor Cyan
}

# MySQL root ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржбрзЗрж░ ржЬржирзНржп ржкрзНрж░рзЛржоржкрзНржЯ
Write-Host "ржбрж╛ржЯрж╛ржмрзЗржЬ рждрзИрж░рж┐ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржкржирж╛рж░ MySQL root ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржкрзНрж░ржпрж╝рзЛржЬржи рж╣ржмрзЗред" -ForegroundColor Yellow
$dbRootPassword = Read-Host -AsSecureString "ржЖржкржирж╛рж░ MySQL root ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржжрж┐ржи"

# --- ржзрж╛ржк рзи: ржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржЯрзБрж▓рж╕ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ ---
Write-Host ""
Write-Host "ржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржЯрзБрж▓рж╕ (PHP, Composer, NPM, MySQL) ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..." -ForegroundColor Green

function Check-Command {
    param ($command)
    try {
        Get-Command $command -ErrorAction Stop | Out-Null
        Write-Host "тЬЕ  $command ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗред" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "тЭМ  $command ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржЯрж┐ ржЗржирж╕рзНржЯрж▓ ржХрж░рзБржи ржПржмржВ PATH-ржП ржпрзЛржЧ ржХрж░рзБржиред" -ForegroundColor Red
        return $false
    }
}

$phpExists = Check-Command "php"
$composerExists = Check-Command "composer"
$npmExists = Check-Command "npm"
$mysqlExists = Check-Command "mysql"

if (-not ($phpExists -and $composerExists -and $npmExists -and $mysqlExists)) {
    Write-Host "`nржкрзНрж░рзЯрзЛржЬржирзАрзЯ рж╕ржХрж▓ ржЯрзБрж▓рж╕ ржЗржирж╕рзНржЯрж▓ ржХрж░рж╛ ржирзЗржЗред ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржмржирзНржз ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред" -ForegroundColor Red
    # Exit the script
    return
}


# --- ржзрж╛ржк рзй: рж▓рж╛рж░рж╛ржнрзЗрж▓ ржкрзНрж░ржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рж╛ ---
Write-Host "`nComposer ржжрж┐рзЯрзЗ '$projectName' ржкрзНрж░ржЬрзЗржХрзНржЯржЯрж┐ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ... (ржПрждрзЗ ржХрж┐ржЫрзБ рж╕ржоржпрж╝ рж▓рж╛ржЧрждрзЗ ржкрж╛рж░рзЗ)" -ForegroundColor Cyan
try {
    composer create-project laravel/laravel "$projectName" --quiet
    Write-Host "тЬЕ  рж▓рж╛рж░рж╛ржнрзЗрж▓ ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Green
} catch {
    Write-Host "тЭМ  рж▓рж╛рж░рж╛ржнрзЗрж▓ ржкрзНрж░ржЬрзЗржХрзНржЯ рждрзИрж░рж┐рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред Composer ржПрж░ ржЖржЙржЯржкрзБржЯ ржжрзЗржЦрзБржиред" -ForegroundColor Red
    return
}


# --- ржзрж╛ржк рзк: ржкрзНрж░ржЬрзЗржХрзНржЯ ржбрж┐рж░рзЗржХрзНржЯрж░рж┐рждрзЗ ржкрзНрж░ржмрзЗрж╢ ржПржмржВ .env ржлрж╛ржЗрж▓ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ---
Set-Location -Path $projectName
Write-Host "`n'$projectName' ржлрзЛрж▓рзНржбрж╛рж░рзЗ ржкрзНрж░ржмрзЗрж╢ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Cyan

# .env.example ржерзЗржХрзЗ .env ржлрж╛ржЗрж▓ рждрзИрж░рж┐
if (-not (Test-Path ".env")) {
    Copy-Item ".env.example" ".env"
    Write-Host "тЬЕ  .env ржлрж╛ржЗрж▓ рждрзИрж░рж┐ рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Green
}

# .env ржлрж╛ржЗрж▓рзЗ ржбрж╛ржЯрж╛ржмрзЗржЬрзЗрж░ рждржерзНржп ржЖржкржбрзЗржЯ ржХрж░рж╛
Write-Host "ржбрж╛ржЯрж╛ржмрзЗржЬ ржХрж╛ржирзЗржХрж╢ржирзЗрж░ ржЬржирзНржп .env ржлрж╛ржЗрж▓ ржЖржкржбрзЗржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
$envContent = Get-Content .env
$envContent = $envContent -replace 'DB_DATABASE=laravel', "DB_DATABASE=$dbName"
$envContent = $envContent -replace 'DB_USERNAME=root', "DB_USERNAME=root"
$envContent = $envContent -replace 'DB_PASSWORD=', "DB_PASSWORD=`"$([System.Runtime.InteropServices.Marshal]::PtrToStringAuto([System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($dbRootPassword)))`""
$envContent | Set-Content .env
Write-Host "тЬЕ  .env ржлрж╛ржЗрж▓ ржЖржкржбрзЗржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Green


# --- ржзрж╛ржк рзл: ржбрж╛ржЯрж╛ржмрзЗржЬ рждрзИрж░рж┐ ржПржмржВ ржорж╛ржЗржЧрзНрж░рзЗрж╢ржи ---
Write-Host "MySQL рж╕рж╛рж░рзНржнрж╛рж░рзЗ '$dbName' ржбрж╛ржЯрж╛ржмрзЗржЬржЯрж┐ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
$mysqlPassword = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto([System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($dbRootPassword))
try {
    # SQL ржХрзЛржбржЯрж┐ ржПржХржЯрж┐ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓рзЗ рж░рж╛ржЦрж╛ рж╣рж▓рзЛ
    $sqlQuery = "CREATE DATABASE \`$dbName\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    # mysql ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛ржирзЛ
    echo $sqlQuery | mysql -u root -p"$mysqlPassword"
    Write-Host "тЬЕ  '$dbName' ржбрж╛ржЯрж╛ржмрзЗржЬ рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Green
} catch {
    Write-Host "тЭМ  ржбрж╛ржЯрж╛ржмрзЗржЬ рждрзИрж░рж┐рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред ржбрж╛ржЯрж╛ржмрзЗржЬржЯрж┐ ржЖржЧрзЗ ржерзЗржХрзЗржЗ ржерж╛ржХрждрзЗ ржкрж╛рж░рзЗ ржЕржержмрж╛ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржнрзБрж▓ред" -ForegroundColor Red
    # You can decide to continue or exit here. For now, we continue to migration.
}

Write-Host "Application Key ржЬрзЗржирж╛рж░рзЗржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
php artisan key:generate

Write-Host "ржбрж╛ржЯрж╛ржмрзЗржЬ ржорж╛ржЗржЧрзНрж░рзЗрж╢ржи ржЪрж╛рж▓рж╛ржирзЛ рж╣ржЪрзНржЫрзЗ..."
try {
    php artisan migrate
    Write-Host "тЬЕ  ржорж╛ржЗржЧрзНрж░рзЗрж╢ржи рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕ржорзНржкржирзНржи рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Green
} catch {
    Write-Host "тЭМ  ржорж╛ржЗржЧрзНрж░рзЗрж╢ржи ржмрзНржпрж░рзНрже рж╣рзЯрзЗржЫрзЗред .env ржлрж╛ржЗрж▓рзЗрж░ ржбрж╛ржЯрж╛ржмрзЗржЬ рждржерзНржп ржПржмржВ MySQL рж╕рж╛рж░рзНржнрж╛рж░ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзБржиред" -ForegroundColor Red
}


# --- ржзрж╛ржк рзм: ржлрзНрж░ржирзНржЯржПржирзНржб (VueJS) рж╕рзЗржЯржЖржк ---
Write-Host "`nNPM ржкрзНржпрж╛ржХрзЗржЬ ржЗржирж╕рзНржЯрж▓ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ... (ржПрждрзЗ ржЕржирзЗржХ рж╕ржоржпрж╝ рж▓рж╛ржЧрждрзЗ ржкрж╛рж░рзЗ)" -ForegroundColor Cyan
try {
    npm install
    Write-Host "тЬЕ  NPM ржкрзНржпрж╛ржХрзЗржЬ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЗржирж╕рзНржЯрж▓ рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Green
} catch {
    Write-Host "тЭМ  NPM ржкрзНржпрж╛ржХрзЗржЬ ржЗржирж╕рзНржЯрж▓рзЗрж╢ржирзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Red
}


# --- ржзрж╛ржк рзн: ржЪрзВрзЬрж╛ржирзНржд ржзрж╛ржк ---
# Git repository рж╢рзБрж░рзБ ржХрж░рж╛
if (Get-Command git -ErrorAction SilentlyContinue) {
    Write-Host "`nGit repository рж╢рзБрж░рзБ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..." -ForegroundColor Cyan
    git init
    git add .
    git commit -m "Initial commit - project setup by PowerShell script"
    Write-Host "тЬЕ  ржкрзНрж░рж╛ржержорж┐ржХ Git ржХржорж┐ржЯ рж╕ржорзНржкржирзНржи рж╣рзЯрзЗржЫрзЗред" -ForegroundColor Green
}

# VS Code-ржП ржкрзНрж░ржЬрзЗржХрзНржЯ ржЦрзЛрж▓рж╛
if (Get-Command code -ErrorAction SilentlyContinue) {
    Write-Host "Visual Studio Code-ржП ржкрзНрж░ржЬрзЗржХрзНржЯржЯрж┐ ржЦрзЛрж▓рж╛ рж╣ржЪрзНржЫрзЗ..." -ForegroundColor Cyan
    code .
}

Write-Host "`nЁЯОЙ рж╕рзЗржЯржЖржк рж╕ржорзНржкржирзНржи! ЁЯОЙ`" -ForegroundColor Yellow
Write-Host "ржПржЦржи ржЖржкржирж┐ ржжрзБржЯрж┐ ржЯрж╛рж░рзНржорж┐ржирж╛рж▓ ржЦрзБрж▓рзЗ ржирж┐ржорзНржирж▓рж┐ржЦрж┐ржд ржХржорж╛ржирзНржбржЧрзБрж▓рзЛ ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░рзЗржи:"
Write-Host "   1. `php artisan serve` (API рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ ржХрж░рж╛рж░ ржЬржирзНржп)"
Write-Host "   2. `npm run dev` (Vite ржлрзНрж░ржирзНржЯржПржирзНржб рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ ржХрж░рж╛рж░ ржЬржирзНржп)"